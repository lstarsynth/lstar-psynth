// Burns.txt
// This is the transducer model given in Nilsson's thesis and
// Abdulla's Regular Model Checking without Transducers

// At least two processes
Initial {
    init: s0;

    s0 -> s1 F1;
    s1 -> s2 F1;
    s2 -> s2 F1;

    accepting: s2;
}

closedUnderTransitions;

Transition {
    init: s0;

    s0 -> t1;

    // t1 of monotonic paper
    t1 -> t1;

    t1 -> t1 F1/F1;
    t1 -> t1 F2/F2;
    t1 -> t1 F3/F3;
    t1 -> t1 F4/F4;
    t1 -> t1 F5/F5;
    t1 -> t1 T1/T1;
    t1 -> t1 T2/T2;
    t1 -> t1 T3/T3;
    t1 -> t1 T4/T4;
    t1 -> t1 T5/T5;

    t1 -> t11 T1/F2;
    t1 -> t11 F1/F2;

    t11 -> t11 F1/F1;
    t11 -> t11 F2/F2;
    t11 -> t11 F3/F3;
    t11 -> t11 F4/F4;
    t11 -> t11 F5/F5;
    t11 -> t11 T1/T1;
    t11 -> t11 T2/T2;
    t11 -> t11 T3/T3;
    t11 -> t11 T4/T4;
    t11 -> t11 T5/T5;

    // t2/t3 of monotonic paper
    s0 -> t3;

    t3 -> t3 F1/F1;
    t3 -> t3 F2/F2;
    t3 -> t3 F3/F3;
    t3 -> t3 F4/F4;
    t3 -> t3 F5/F5;

    t3 -> t31 T2/T3;
    t3 -> t31 F2/F3;

    t31 -> t31 T1/T1;
    t31 -> t31 T2/T2;
    t31 -> t31 T3/T3;
    t31 -> t31 T4/T4;
    t31 -> t31 T5/T5;
    t31 -> t31 F1/F1;
    t31 -> t31 F2/F2;
    t31 -> t31 F3/F3;
    t31 -> t31 F4/F4;
    t31 -> t31 F5/F5;

    t3 -> t2 T1/T1;
    t3 -> t2 T2/T2;
    t3 -> t2 T3/T3;
    t3 -> t2 T4/T4;
    t3 -> t2 T5/T5;

    t2 -> t2 T1/T1;
    t2 -> t2 T2/T2;
    t2 -> t2 T3/T3;
    t2 -> t2 T4/T4;
    t2 -> t2 T5/T5;
    t2 -> t2 F1/F1;
    t2 -> t2 F2/F2;
    t2 -> t2 F3/F3;
    t2 -> t2 F4/F4;
    t2 -> t2 F5/F5;

    t2 -> t21 T2/T1;
    t2 -> t21 F2/F1;

    t21 -> t21 T1/T1;
    t21 -> t21 T2/T2;
    t21 -> t21 T3/T3;
    t21 -> t21 T4/T4;
    t21 -> t21 T5/T5;
    t21 -> t21 F1/F1;
    t21 -> t21 F2/F2;
    t21 -> t21 F3/F3;
    t21 -> t21 F4/F4;
    t21 -> t21 F5/F5;

    // t4
    s0 -> t4;

    t4 -> t4 T1/T1;
    t4 -> t4 T2/T2;
    t4 -> t4 T3/T3;
    t4 -> t4 T4/T4;
    t4 -> t4 T5/T5;
    t4 -> t4 F1/F1;
    t4 -> t4 F2/F2;
    t4 -> t4 F3/F3;
    t4 -> t4 F4/F4;
    t4 -> t4 F5/F5;

    t4 -> t41 T3/T4;
    t4 -> t41 F3/T4;

    t41 -> t41 T1/T1;
    t41 -> t41 T2/T2;
    t41 -> t41 T3/T3;
    t41 -> t41 T4/T4;
    t41 -> t41 T5/T5;
    t41 -> t41 F1/F1;
    t41 -> t41 F2/F2;
    t41 -> t41 F3/F3;
    t41 -> t41 F4/F4;
    t41 -> t41 F5/F5;

    // t5/t6
    s0 -> t6;

    t6 -> t6 F1/F1;
    t6 -> t6 F2/F2;
    t6 -> t6 F3/F3;
    t6 -> t6 F4/F4;
    t6 -> t6 F5/F5;

    t6 -> t61 T4/T5;
    t6 -> t61 F4/F5;

    t61 -> t61 T1/T1;
    t61 -> t61 T2/T2;
    t61 -> t61 T3/T3;
    t61 -> t61 T4/T4;
    t61 -> t61 T5/T5;
    t61 -> t61 F1/F1;
    t61 -> t61 F2/F2;
    t61 -> t61 F3/F3;
    t61 -> t61 F4/F4;
    t61 -> t61 F5/F5;

    t6 -> t5 T1/T1;
    t6 -> t5 T2/T2;
    t6 -> t5 T3/T3;
    t6 -> t5 T4/T4;
    t6 -> t5 T5/T5;

    t5 -> t5 T1/T1;
    t5 -> t5 T2/T2;
    t5 -> t5 T3/T3;
    t5 -> t5 T4/T4;
    t5 -> t5 T5/T5;
    t5 -> t5 F1/F1;
    t5 -> t5 F2/F2;
    t5 -> t5 F3/F3;
    t5 -> t5 F4/F4;
    t5 -> t5 F5/F5;

    t5 -> t51 T4/T1;
    t5 -> t51 F4/F1;

    t51 -> t51 T1/T1;
    t51 -> t51 T2/T2;
    t51 -> t51 T3/T3;
    t51 -> t51 T4/T4;
    t51 -> t51 T5/T5;
    t51 -> t51 F1/F1;
    t51 -> t51 F2/F2;
    t51 -> t51 F3/F3;
    t51 -> t51 F4/F4;
    t51 -> t51 F5/F5;

    // t7
    s0 -> t7;

    t7 -> t7 T1/T1;
    t7 -> t7 T2/T2;
    t7 -> t7 T3/T3;
    t7 -> t7 T4/T4;
    t7 -> t7 T5/T5;
    t7 -> t7 F1/F1;
    t7 -> t7 F2/F2;
    t7 -> t7 F3/F3;
    t7 -> t7 F4/F4;
    t7 -> t7 F5/F5;

    t7 -> t71 T5/T6;
    t7 -> t71 F5/F6;

    t71 -> t71 F1/F1;
    t71 -> t71 F2/F2;
    t71 -> t71 F3/F3;
    t71 -> t71 F4/F4;
    t71 -> t71 F5/F5;

    // t8
    // s0 -> t8;

    // t8 -> t8 T1/T1;
    // t8 -> t8 T2/T2;
    // t8 -> t8 T3/T3;
    // t8 -> t8 T4/T4;
    // t8 -> t8 T5/T5;
    // t8 -> t8 F1/F1;
    // t8 -> t8 F2/F2;
    // t8 -> t8 F3/F3;
    // t8 -> t8 F4/F4;
    // t8 -> t8 F5/F5;

    // t8 -> t81 T6/T6;
    // t8 -> t81 F6/F6;

    // t81 -> t81 T1/T1;
    // t81 -> t81 T2/T2;
    // t81 -> t81 T3/T3;
    // t81 -> t81 T4/T4;
    // t81 -> t81 T5/T5;
    // t81 -> t81 F1/F1;
    // t81 -> t81 F2/F2;
    // t81 -> t81 F3/F3;
    // t81 -> t81 F4/F4;
    // t81 -> t81 F5/F5;

    // t9
    // s0 -> t9;

    // t9 -> t9 T1/T1;
    // t9 -> t9 T2/T2;
    // t9 -> t9 T3/T3;
    // t9 -> t9 T4/T4;
    // t9 -> t9 T5/T5;
    // t9 -> t9 F1/F1;
    // t9 -> t9 F2/F2;
    // t9 -> t9 F3/F3;
    // t9 -> t9 F4/F4;
    // t9 -> t9 F5/F5;

    // t9 -> t91 T7/T7;
    // t9 -> t91 F7/F7;

    // t91 -> t91 T1/T1;
    // t91 -> t91 T2/T2;
    // t91 -> t91 T3/T3;
    // t91 -> t91 T4/T4;
    // t91 -> t91 T5/T5;
    // t91 -> t91 F1/F1;
    // t91 -> t91 F2/F2;
    // t91 -> t91 F3/F3;
    // t91 -> t91 F4/F4;
    // t91 -> t91 F5/F5;

    accepting: t11, t21, t31, t41, t51, t61, t71;
}

// two processes in the CS
Bad {
    init: s0;

    s0 -> s0 F1;
    s0 -> s0 F2;
    s0 -> s0 F3;
    s0 -> s0 F4;
    s0 -> s0 F5;
    s0 -> s0 T1;
    s0 -> s0 T2;
    s0 -> s0 T3;
    s0 -> s0 T4;
    s0 -> s0 T5;

    s0 -> s1 F6;
    s0 -> s1 T6;

    s1 -> s1 F1;
    s1 -> s1 F2;
    s1 -> s1 F3;
    s1 -> s1 F4;
    s1 -> s1 F5;
    s1 -> s1 T1;
    s1 -> s1 T2;
    s1 -> s1 T3;
    s1 -> s1 T4;
    s1 -> s1 T5;

    s1 -> s2 F6;
    s1 -> s2 T6;

    s2 -> s2 F1;
    s2 -> s2 F2;
    s2 -> s2 F3;
    s2 -> s2 F4;
    s2 -> s2 F5;
    s2 -> s2 F6;
    s2 -> s2 T1;
    s2 -> s2 T2;
    s2 -> s2 T3;
    s2 -> s2 T4;
    s2 -> s2 T5;
    s2 -> s2 T6;

    accepting: s2;
}

monolithicWitness;

transducerStateGuessing: 1 .. 10;
automatonStateGuessing: 0 .. 4;

explicitChecksUntilLength: 4;
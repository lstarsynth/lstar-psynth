package grammar.Absyn; // Java Package generated by the BNF Converter.

public class Transducer extends TransducerRule {
  public final InitRule initrule_;
  public final ListTransitionRule listtransitionrule_;
  public final AcceptingRule acceptingrule_;
  public Transducer(InitRule p1, ListTransitionRule p2, AcceptingRule p3) { initrule_ = p1; listtransitionrule_ = p2; acceptingrule_ = p3; }

  public <R,A> R accept(grammar.Absyn.TransducerRule.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof grammar.Absyn.Transducer) {
      grammar.Absyn.Transducer x = (grammar.Absyn.Transducer)o;
      return this.initrule_.equals(x.initrule_) && this.listtransitionrule_.equals(x.listtransitionrule_) && this.acceptingrule_.equals(x.acceptingrule_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(this.initrule_.hashCode())+this.listtransitionrule_.hashCode())+this.acceptingrule_.hashCode();
  }


}

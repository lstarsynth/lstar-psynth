// follow game
Initial {
    init: si;

    si -> s0 E;
    s0 -> s2 0000;
    s1 -> s2 0000;
    s2 -> s2 0000;
    accepting: s2;
}    

Transition {
    init: si;

    si -> ss S/E;
    si -> se E/S;
    si -> sa S/E;
    si -> sa E/S;
    // system addition enabled x-coordinate
    ss -> sf 0000/1000;
    ss -> sf 0001/1001;
    ss -> sf 0010/1010;
    ss -> sf 0011/1011;
    ss -> sf 0100/1100;
    ss -> sf 0101/1101;
    ss -> sf 0110/1110;
    ss -> sf 0111/1111;
    // carry bit saved
    ss -> sc 1000/0000;
    ss -> sc 1001/0001;
    ss -> sc 1010/0010;
    ss -> sc 1011/0011;
    ss -> sc 1100/0100;
    ss -> sc 1101/0101;
    ss -> sc 1110/0110;
    ss -> sc 1111/0111;
    // carry still saved
    sc -> sc 1000/0000;
    sc -> sc 1001/0001;
    sc -> sc 1010/0010;
    sc -> sc 1011/0011;
    sc -> sc 1100/0100;
    sc -> sc 1101/0101;
    sc -> sc 1110/0110;
    sc -> sc 1111/0111;
    // carry carried over
    sc -> sf 0000/1000;
    sc -> sf 0001/1001;
    sc -> sf 0010/1010;
    sc -> sf 0011/1011;
    sc -> sf 0100/1100;
    sc -> sf 0101/1101;
    sc -> sf 0110/1110;
    sc -> sf 0111/1111;
    // do nothing
    sf -> sf 1000/1000;
    sf -> sf 1001/1001;
    sf -> sf 1010/1010;
    sf -> sf 1011/1011;
    sf -> sf 1100/1100;
    sf -> sf 1101/1101;
    sf -> sf 1110/1110;
    sf -> sf 1111/1111;

    sf -> sf 0000/0000;
    sf -> sf 0001/0001;
    sf -> sf 0010/0010;
    sf -> sf 0011/0011;
    sf -> sf 0100/0100;
    sf -> sf 0101/0101;
    sf -> sf 0110/0110;
    sf -> sf 0111/0111;

    // system addition enabled y-coordinate
    ss -> sf 0000/0100;
    ss -> sf 0001/0101;
    ss -> sf 0010/0110;
    ss -> sf 0011/0111;
    ss -> sf 1000/1100;
    ss -> sf 1001/1101;
    ss -> sf 1010/1110;
    ss -> sf 1011/1111;
    // carry bit saved
    ss -> syc 0100/0000;
    ss -> syc 0101/0001;
    ss -> syc 0110/0010;
    ss -> syc 0111/0011;
    ss -> syc 1100/1000;
    ss -> syc 1101/1001;
    ss -> syc 1110/1010;
    ss -> syc 1111/1011;
    // carry still saved
    syc -> syc 0100/0000;
    syc -> syc 0101/0001;
    syc -> syc 0110/0010;
    syc -> syc 0111/0011;
    syc -> syc 1100/1000;
    syc -> syc 1101/1001;
    syc -> syc 1110/1010;
    syc -> syc 1111/1011;
    // carry carried over
    syc -> sf 0000/0100;
    syc -> sf 0001/0101;
    syc -> sf 0010/0110;
    syc -> sf 0011/0111;
    syc -> sf 1000/1100;
    syc -> sf 1001/1101;
    syc -> sf 1010/1110;
    syc -> sf 1011/1111;

 // system substraction enabled x-coordinate
    ss -> sf 1000/0000;
    ss -> sf 1001/0001;
    ss -> sf 1010/0010;
    ss -> sf 1011/0011;
    ss -> sf 1100/0100;
    ss -> sf 1101/0101;
    ss -> sf 1110/0110;
    ss -> sf 1111/0111;
    // negative carry bit saved
    ss -> suc 0000/1000;
    ss -> suc 0001/1001;
    ss -> suc 0010/1010;
    ss -> suc 0011/1011;
    ss -> suc 0100/1100;
    ss -> suc 0101/1101;
    ss -> suc 0110/1110;
    ss -> suc 0111/1111;
    // carry still saved
    suc -> suc 0000/1000;
    suc -> suc 0001/1001;
    suc -> suc 0010/1010;
    suc -> suc 0011/1011;
    suc -> suc 0100/1100;
    suc -> suc 0101/1101;
    suc -> suc 0110/1110;
    suc -> suc 0111/1111;
    // carry carried over
    suc -> sf 1000/0000;
    suc -> sf 1001/0001;
    suc -> sf 1010/0010;
    suc -> sf 1011/0011;
    suc -> sf 1100/0100;
    suc -> sf 1101/0101;
    suc -> sf 1110/0110;
    suc -> sf 1111/0111;

    // system substraction enabled y-coordinate
    ss -> sf 0100/0000;
    ss -> sf 0101/0001;
    ss -> sf 0110/0010;
    ss -> sf 0111/0011;
    ss -> sf 1100/1000;
    ss -> sf 1101/1001;
    ss -> sf 1110/1010;
    ss -> sf 1111/1011;
    // carry bit saved
    ss -> suyc 0000/0100;
    ss -> suyc 0001/0101;
    ss -> suyc 0010/0110;
    ss -> suyc 0011/0111;
    ss -> suyc 1000/1100;
    ss -> suyc 1001/1101;
    ss -> suyc 1010/1110;
    ss -> suyc 1011/1111;
    // carry still saved
    suyc -> suyc 0000/0100;
    suyc -> suyc 0001/0101;
    suyc -> suyc 0010/0110;
    suyc -> suyc 0011/0111;
    suyc -> suyc 1000/1100;
    suyc -> suyc 1001/1101;
    suyc -> suyc 1010/1110;
    suyc -> suyc 1011/1111;
    // carry carried over
    suyc -> sf 0100/0000;
    suyc -> sf 0101/0001;
    suyc -> sf 0110/0010;
    suyc -> sf 0111/0011;
    suyc -> sf 1100/1000;
    suyc -> sf 1101/1001;
    suyc -> sf 1110/1010;
    suyc -> sf 1111/1011;


    // human addition enabled x-coordinate
    se -> sf 0000/0010;
    se -> sf 0001/0011;
    se -> sf 0100/0110;
    se -> sf 0101/0111;
    se -> sf 1000/1010;
    se -> sf 1001/1011;
    se -> sf 1100/1110;
    se -> sf 1101/1111;
    // carry bit saved
    se -> sec 0010/0000;
    se -> sec 0011/0001;
    se -> sec 0110/0100;
    se -> sec 0111/0101;
    se -> sec 1010/1000;
    se -> sec 1011/1001;
    se -> sec 1110/1100;
    se -> sec 1111/1101;
    // carry still saved
    sec -> sec 0010/0000;
    sec -> sec 0011/0001;
    sec -> sec 0110/0100;
    sec -> sec 0111/0101;
    sec -> sec 1010/1000;
    sec -> sec 1011/1001;
    sec -> sec 1110/1100;
    sec -> sec 1111/1101;
    // carry carried over
    sec -> sf 0000/0010;
    sec -> sf 0001/0011;
    sec -> sf 0100/0110;
    sec -> sf 0101/0111;
    sec -> sf 1000/1010;
    sec -> sf 1001/1011;
    sec -> sf 1100/1110;
    sec -> sf 1101/1111;

    // human addition enabled y-coordinate
    se -> sf 0000/0001;
    se -> sf 0010/0011;
    se -> sf 0100/0101;
    se -> sf 0110/0111;
    se -> sf 1000/1001;
    se -> sf 1010/1011;
    se -> sf 1100/1101;
    se -> sf 1110/1111;
    // carry bit saved
    se -> seyc 0001/0000;
    se -> seyc 0011/0010;
    se -> seyc 0101/0100;
    se -> seyc 0111/0110;
    se -> seyc 1001/1000;
    se -> seyc 1011/1010;
    se -> seyc 1101/1100;
    se -> seyc 1111/1110;
    // carry still saved
    seyc -> seyc 0001/0000;
    seyc -> seyc 0011/0010;
    seyc -> seyc 0101/0100;
    seyc -> seyc 0111/0110;
    seyc -> seyc 1001/1000;
    seyc -> seyc 1011/1010;
    seyc -> seyc 1101/1100;
    seyc -> seyc 1111/1110;
    // carry carried over
    seyc -> sf 0000/0001;
    seyc -> sf 0010/0011;
    seyc -> sf 0100/0101;
    seyc -> sf 0110/0111;
    seyc -> sf 1000/1001;
    seyc -> sf 1010/1011;
    seyc -> sf 1100/1101;
    seyc -> sf 1110/1111;

 // human substraction enabled x-coordinate
    se -> sf 0010/0000;
    se -> sf 0011/0001;
    se -> sf 0110/0100;
    se -> sf 0111/0101;
    se -> sf 1010/1000;
    se -> sf 1011/1001;
    se -> sf 1110/1100;
    se -> sf 1111/1101;
    // negative carry bit saved
    se -> suexc 0000/0010;
    se -> suexc 0001/0011;
    se -> suexc 0100/0110;
    se -> suexc 0101/0111;
    se -> suexc 1000/1010;
    se -> suexc 1001/1011;
    se -> suexc 1100/1110;
    se -> sueyc 1101/1111;
    // carry still saved
    suexc -> suexc 0000/0010;
    suexc -> suexc 0001/0011;
    suexc -> suexc 0100/0110;
    suexc -> suexc 0101/0111;
    suexc -> suexc 1000/1010;
    suexc -> suexc 1001/1011;
    suexc -> suexc 1100/1110;
    suexc -> suexc 1101/1111;
    // carry carried over
    suexc -> sf 0010/0000;
    suexc -> sf 0011/0001;
    suexc -> sf 0110/0100;
    suexc -> sf 0111/0101;
    suexc -> sf 1010/1000;
    suexc -> sf 1011/1001;
    suexc -> sf 1110/1100;
    suexc -> sf 1111/1101;

    // human substraction enabled y-coordinate
    se -> sf 0001/0000;
    se -> sf 0011/0010;
    se -> sf 0101/0100;
    se -> sf 0111/0110;
    se -> sf 1001/1000;
    se -> sf 1011/1010;
    se -> sf 1101/1100;
    se -> sf 1111/1110;
    // negative carry bit saved
    se -> sueyc 0000/0001;
    se -> sueyc 0010/0011;
    se -> sueyc 0100/0101;
    se -> sueyc 0110/0111;
    se -> sueyc 1000/1001;
    se -> sueyc 1010/1011;
    se -> sueyc 1100/1101;
    se -> sueyc 1110/1111;
    // carry still saved
    sueyc -> sueyc 0000/0001;
    sueyc -> sueyc 0010/0011;
    sueyc -> sueyc 0100/0101;
    sueyc -> sueyc 0110/0111;
    sueyc -> sueyc 1000/1001;
    sueyc -> sueyc 1010/1011;
    sueyc -> sueyc 1100/1101;
    sueyc -> sueyc 1110/1111;
    // carry carried over
    sueyc -> sf 0001/0000;
    sueyc -> sf 0011/0010;
    sueyc -> sf 0101/0100;
    sueyc -> sf 0111/0110;
    sueyc -> sf 1001/1000;
    sueyc -> sf 1011/1010;
    sueyc -> sf 1101/1100;
    sueyc -> sf 1111/1110;
    // human can stay
    se -> sf;

    accepting: sf, sa;
}

Bad {
  init: s0;
  s0 -> s24 0000;
  s0 -> s1 E;
  s0 -> s24 1010;
  s0 -> s24 0101;
  s0 -> s24 1111;
  s0 -> s24 1000;
  s0 -> s24 1101;
  s0 -> s24 0010;
  s0 -> s24 0111;
  s0 -> s24 0100;
  s0 -> s24 1110;
  s0 -> s24 0001;
  s0 -> s24 1011;
  s0 -> s24 1001;
  s0 -> s24 0011;
  s0 -> s24 1100;
  s0 -> s24 0110;
  s1 -> s24 S;
  s1 -> s2 0000;
  s1 -> s24 E;
  s1 -> s2 1010;
  s1 -> s2 0101;
  s1 -> s2 1111;
  s1 -> s3 1000;
  s1 -> s3 1101;
  s1 -> s4 0010;
  s1 -> s4 0111;
  s1 -> s5 0100;
  s1 -> s5 1110;
  s1 -> s6 0001;
  s1 -> s6 1011;
  s1 -> s24 1001;
  s1 -> s24 0011;
  s1 -> s24 1100;
  s1 -> s24 0110;
  s2 -> s24 S;
  s2 -> s15 0000;
  s2 -> s24 E;
  s2 -> s15 1010;
  s2 -> s15 0101;
  s2 -> s15 1111;
  s2 -> s16 1000;
  s2 -> s16 1101;
  s2 -> s17 0010;
  s2 -> s17 0111;
  s2 -> s18 0100;
  s2 -> s18 1110;
  s2 -> s19 0001;
  s2 -> s19 1011;
  s2 -> s24 1001;
  s2 -> s24 0011;
  s2 -> s24 1100;
  s2 -> s24 0110;
  s3 -> s24 S;
  s3 -> s12 0000;
  s3 -> s24 E;
  s3 -> s12 1010;
  s3 -> s12 0101;
  s3 -> s12 1111;
  s3 -> s14 1000;
  s3 -> s14 1101;
  s3 -> s11 0010;
  s3 -> s11 0111;
  s3 -> s24 0100;
  s3 -> s24 1110;
  s3 -> s24 0001;
  s3 -> s24 1011;
  s3 -> s24 1001;
  s3 -> s24 0011;
  s3 -> s24 1100;
  s3 -> s24 0110;
  s4 -> s24 S;
  s4 -> s11 0000;
  s4 -> s24 E;
  s4 -> s11 1010;
  s4 -> s11 0101;
  s4 -> s11 1111;
  s4 -> s12 1000;
  s4 -> s12 1101;
  s4 -> s13 0010;
  s4 -> s13 0111;
  s4 -> s24 0100;
  s4 -> s24 1110;
  s4 -> s24 0001;
  s4 -> s24 1011;
  s4 -> s24 1001;
  s4 -> s24 0011;
  s4 -> s24 1100;
  s4 -> s24 0110;
  s5 -> s24 S;
  s5 -> s8 0000;
  s5 -> s24 E;
  s5 -> s8 1010;
  s5 -> s8 0101;
  s5 -> s8 1111;
  s5 -> s24 1000;
  s5 -> s24 1101;
  s5 -> s24 0010;
  s5 -> s24 0111;
  s5 -> s10 0100;
  s5 -> s10 1110;
  s5 -> s7 0001;
  s5 -> s7 1011;
  s5 -> s24 1001;
  s5 -> s24 0011;
  s5 -> s24 1100;
  s5 -> s24 0110;
  s6 -> s24 S;
  s6 -> s7 0000;
  s6 -> s24 E;
  s6 -> s7 1010;
  s6 -> s7 0101;
  s6 -> s7 1111;
  s6 -> s24 1000;
  s6 -> s24 1101;
  s6 -> s24 0010;
  s6 -> s24 0111;
  s6 -> s8 0100;
  s6 -> s8 1110;
  s6 -> s9 0001;
  s6 -> s9 1011;
  s6 -> s24 1001;
  s6 -> s24 0011;
  s6 -> s24 1100;
  s6 -> s24 0110;
  s7 -> s24 S;
  s7 -> s7 0000;
  s7 -> s24 E;
  s7 -> s7 1010;
  s7 -> s7 0101;
  s7 -> s7 1111;
  s7 -> s24 1000;
  s7 -> s24 1101;
  s7 -> s24 0010;
  s7 -> s24 0111;
  s7 -> s24 0100;
  s7 -> s24 1110;
  s7 -> s24 0001;
  s7 -> s24 1011;
  s7 -> s24 1001;
  s7 -> s24 0011;
  s7 -> s24 1100;
  s7 -> s24 0110;
  s8 -> s24 S;
  s8 -> s8 0000;
  s8 -> s24 E;
  s8 -> s8 1010;
  s8 -> s8 0101;
  s8 -> s8 1111;
  s8 -> s24 1000;
  s8 -> s24 1101;
  s8 -> s24 0010;
  s8 -> s24 0111;
  s8 -> s24 0100;
  s8 -> s24 1110;
  s8 -> s24 0001;
  s8 -> s24 1011;
  s8 -> s24 1001;
  s8 -> s24 0011;
  s8 -> s24 1100;
  s8 -> s24 0110;
  s9 -> s24 S;
  s9 -> s24 0000;
  s9 -> s24 E;
  s9 -> s24 1010;
  s9 -> s24 0101;
  s9 -> s24 1111;
  s9 -> s24 1000;
  s9 -> s24 1101;
  s9 -> s24 0010;
  s9 -> s24 0111;
  s9 -> s8 0100;
  s9 -> s8 1110;
  s9 -> s9 0001;
  s9 -> s9 1011;
  s9 -> s24 1001;
  s9 -> s24 0011;
  s9 -> s24 1100;
  s9 -> s24 0110;
  s10 -> s24 S;
  s10 -> s24 0000;
  s10 -> s24 E;
  s10 -> s24 1010;
  s10 -> s24 0101;
  s10 -> s24 1111;
  s10 -> s24 1000;
  s10 -> s24 1101;
  s10 -> s24 0010;
  s10 -> s24 0111;
  s10 -> s10 0100;
  s10 -> s10 1110;
  s10 -> s7 0001;
  s10 -> s7 1011;
  s10 -> s24 1001;
  s10 -> s24 0011;
  s10 -> s24 1100;
  s10 -> s24 0110;
  s11 -> s24 S;
  s11 -> s11 0000;
  s11 -> s24 E;
  s11 -> s11 1010;
  s11 -> s11 0101;
  s11 -> s11 1111;
  s11 -> s24 1000;
  s11 -> s24 1101;
  s11 -> s24 0010;
  s11 -> s24 0111;
  s11 -> s24 0100;
  s11 -> s24 1110;
  s11 -> s24 0001;
  s11 -> s24 1011;
  s11 -> s24 1001;
  s11 -> s24 0011;
  s11 -> s24 1100;
  s11 -> s24 0110;
  s12 -> s24 S;
  s12 -> s12 0000;
  s12 -> s24 E;
  s12 -> s12 1010;
  s12 -> s12 0101;
  s12 -> s12 1111;
  s12 -> s24 1000;
  s12 -> s24 1101;
  s12 -> s24 0010;
  s12 -> s24 0111;
  s12 -> s24 0100;
  s12 -> s24 1110;
  s12 -> s24 0001;
  s12 -> s24 1011;
  s12 -> s24 1001;
  s12 -> s24 0011;
  s12 -> s24 1100;
  s12 -> s24 0110;
  s13 -> s24 S;
  s13 -> s24 0000;
  s13 -> s24 E;
  s13 -> s24 1010;
  s13 -> s24 0101;
  s13 -> s24 1111;
  s13 -> s12 1000;
  s13 -> s12 1101;
  s13 -> s13 0010;
  s13 -> s13 0111;
  s13 -> s24 0100;
  s13 -> s24 1110;
  s13 -> s24 0001;
  s13 -> s24 1011;
  s13 -> s24 1001;
  s13 -> s24 0011;
  s13 -> s24 1100;
  s13 -> s24 0110;
  s14 -> s24 S;
  s14 -> s24 0000;
  s14 -> s24 E;
  s14 -> s24 1010;
  s14 -> s24 0101;
  s14 -> s24 1111;
  s14 -> s14 1000;
  s14 -> s14 1101;
  s14 -> s11 0010;
  s14 -> s11 0111;
  s14 -> s24 0100;
  s14 -> s24 1110;
  s14 -> s24 0001;
  s14 -> s24 1011;
  s14 -> s24 1001;
  s14 -> s24 0011;
  s14 -> s24 1100;
  s14 -> s24 0110;
  s15 -> s24 S;
  s15 -> s15 0000;
  s15 -> s24 E;
  s15 -> s15 1010;
  s15 -> s15 0101;
  s15 -> s15 1111;
  s15 -> s24 1000;
  s15 -> s24 1101;
  s15 -> s24 0010;
  s15 -> s24 0111;
  s15 -> s24 0100;
  s15 -> s24 1110;
  s15 -> s24 0001;
  s15 -> s24 1011;
  s15 -> s24 1001;
  s15 -> s24 0011;
  s15 -> s24 1100;
  s15 -> s24 0110;
  s16 -> s24 S;
  s16 -> s24 0000;
  s16 -> s24 E;
  s16 -> s24 1010;
  s16 -> s24 0101;
  s16 -> s24 1111;
  s16 -> s16 1000;
  s16 -> s16 1101;
  s16 -> s17 0010;
  s16 -> s17 0111;
  s16 -> s24 0100;
  s16 -> s24 1110;
  s16 -> s24 0001;
  s16 -> s24 1011;
  s16 -> s24 1001;
  s16 -> s24 0011;
  s16 -> s24 1100;
  s16 -> s24 0110;
  s17 -> s24 S;
  s17 -> s17 0000;
  s17 -> s24 E;
  s17 -> s17 1010;
  s17 -> s17 0101;
  s17 -> s17 1111;
  s17 -> s24 1000;
  s17 -> s24 1101;
  s17 -> s24 0010;
  s17 -> s24 0111;
  s17 -> s24 0100;
  s17 -> s24 1110;
  s17 -> s24 0001;
  s17 -> s24 1011;
  s17 -> s24 1001;
  s17 -> s24 0011;
  s17 -> s24 1100;
  s17 -> s24 0110;
  s18 -> s24 S;
  s18 -> s21 0000;
  s18 -> s24 E;
  s18 -> s21 1010;
  s18 -> s21 0101;
  s18 -> s21 1111;
  s18 -> s24 1000;
  s18 -> s24 1101;
  s18 -> s24 0010;
  s18 -> s24 0111;
  s18 -> s23 0100;
  s18 -> s23 1110;
  s18 -> s20 0001;
  s18 -> s20 1011;
  s18 -> s24 1001;
  s18 -> s24 0011;
  s18 -> s24 1100;
  s18 -> s24 0110;
  s19 -> s24 S;
  s19 -> s20 0000;
  s19 -> s24 E;
  s19 -> s20 1010;
  s19 -> s20 0101;
  s19 -> s20 1111;
  s19 -> s24 1000;
  s19 -> s24 1101;
  s19 -> s24 0010;
  s19 -> s24 0111;
  s19 -> s21 0100;
  s19 -> s21 1110;
  s19 -> s22 0001;
  s19 -> s22 1011;
  s19 -> s24 1001;
  s19 -> s24 0011;
  s19 -> s24 1100;
  s19 -> s24 0110;
  s20 -> s24 S;
  s20 -> s20 0000;
  s20 -> s24 E;
  s20 -> s20 1010;
  s20 -> s20 0101;
  s20 -> s20 1111;
  s20 -> s24 1000;
  s20 -> s24 1101;
  s20 -> s24 0010;
  s20 -> s24 0111;
  s20 -> s24 0100;
  s20 -> s24 1110;
  s20 -> s24 0001;
  s20 -> s24 1011;
  s20 -> s24 1001;
  s20 -> s24 0011;
  s20 -> s24 1100;
  s20 -> s24 0110;
  s21 -> s24 S;
  s21 -> s21 0000;
  s21 -> s24 E;
  s21 -> s21 1010;
  s21 -> s21 0101;
  s21 -> s21 1111;
  s21 -> s24 1000;
  s21 -> s24 1101;
  s21 -> s24 0010;
  s21 -> s24 0111;
  s21 -> s24 0100;
  s21 -> s24 1110;
  s21 -> s24 0001;
  s21 -> s24 1011;
  s21 -> s24 1001;
  s21 -> s24 0011;
  s21 -> s24 1100;
  s21 -> s24 0110;
  s22 -> s24 S;
  s22 -> s24 0000;
  s22 -> s24 E;
  s22 -> s24 1010;
  s22 -> s24 0101;
  s22 -> s24 1111;
  s22 -> s24 1000;
  s22 -> s24 1101;
  s22 -> s24 0010;
  s22 -> s24 0111;
  s22 -> s21 0100;
  s22 -> s21 1110;
  s22 -> s22 0001;
  s22 -> s22 1011;
  s22 -> s24 1001;
  s22 -> s24 0011;
  s22 -> s24 1100;
  s22 -> s24 0110;
  s23 -> s24 S;
  s23 -> s24 0000;
  s23 -> s24 E;
  s23 -> s24 1010;
  s23 -> s24 0101;
  s23 -> s24 1111;
  s23 -> s24 1000;
  s23 -> s24 1101;
  s23 -> s24 0010;
  s23 -> s24 0111;
  s23 -> s23 0100;
  s23 -> s23 1110;
  s23 -> s20 0001;
  s23 -> s20 1011;
  s23 -> s24 1001;
  s23 -> s24 0011;
  s23 -> s24 1100;
  s23 -> s24 0110;
  s24 -> s24 S;
  s24 -> s24 0000;
  s24 -> s24 E;
  s24 -> s24 1010;
  s24 -> s24 0101;
  s24 -> s24 1111;
  s24 -> s24 1000;
  s24 -> s24 1101;
  s24 -> s24 0010;
  s24 -> s24 0111;
  s24 -> s24 0100;
  s24 -> s24 1110;
  s24 -> s24 0001;
  s24 -> s24 1011;
  s24 -> s24 1001;
  s24 -> s24 0011;
  s24 -> s24 1100;
  s24 -> s24 0110;
  accepting: s0, s16, s22, s23, s24, s9, s10, s13, s14;
}

P0 {
    init: si;

    si -> s0 S;
    s0 -> s0 0000;
    s0 -> s0 0001;
    s0 -> s0 0010;
    s0 -> s0 0011;
    s0 -> s0 0100;
    s0 -> s0 0101;
    s0 -> s0 0110;
    s0 -> s0 0111;
    s0 -> s0 1000;
    s0 -> s0 1001;
    s0 -> s0 1010;
    s0 -> s0 1011;
    s0 -> s0 1100;
    s0 -> s0 1101;
    s0 -> s0 1110;
    s0 -> s0 1111;

    accepting: s0;

}

P1 {
    init: si;

    si -> s0 E;
    s0 -> s0 0000;
    s0 -> s0 0001;
    s0 -> s0 0010;
    s0 -> s0 0011;
    s0 -> s0 0100;
    s0 -> s0 0101;
    s0 -> s0 0110;
    s0 -> s0 0111;
    s0 -> s0 1000;
    s0 -> s0 1001;
    s0 -> s0 1010;
    s0 -> s0 1011;
    s0 -> s0 1100;
    s0 -> s0 1101;
    s0 -> s0 1110;
    s0 -> s0 1111;

    accepting: s0;

}



transducerStateGuessing: 1 .. 10;
automatonStateGuessing: 0 .. 4;
